#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define NAV 1
#define OTH 2
#define RRR 3
#define SYM 4
#define MED 5
#define FUN 6


&sk {
    quick-release;
};

#define COMBO(NAME, BINDINGS, KEYPOS, MS, LAYERS) \
  combo_##NAME { \
    bindings = <BINDINGS>; \
    key-positions = <KEYPOS>; \
    timeout-ms = <MS>; \
    layers = <LAYERS>; \
  };

&lt {
    flavor = "tap-preferred";
    tapping_term_ms = <300>;
};

&mt {
    flavor = "tap-preferred";
    tapping-term-ms = <350>;
};

/ {
  chosen {
    zmk,matrix_transform = &five_column_transform;
  };
  
/*
*                KEY POSITIONS
*    0   1   2   3   4 │ │  5   6   7   8   9
*   10  11  12  13  14 │ │ 15  16  17  18  19
*   20  21  22  23  24 │ │ 25  26  27  28  29
*           30  31  32 │ │ 33  34  35
*/
};
/ {
    combos {
        compatible = "zmk,combos";
	COMBO(ac, &kp EQUAL, 15 16, 30, 6)
	COMBO(ae, &kp SEMI, 2 12, 120, 6)
	COMBO(oe, &kp SQT, 1 11, 120, 6)
	COMBO(tab, &kp TAB, 8 18, 30, 0)
	COMBO(x, &kp X, 3 13, 80, 0)
	COMBO(z, &kp Z, 2 12, 80, 0)
	COMBO(ci, &kp LS(N2), 6 16, 80, 0)
	COMBO(enter, &kp ENTER, 7 17, 30, 0 1)
	COMBO(enter1, &kp ENTER, 2 12, 30, 1)
	COMBO(q, &kp Q, 1 11, 80, 0)
	COMBO(tog, &tog 1, 30 31, 30, 0 1)  
        COMBO(rctrl, &sk RCTRL, 17 27, 30, 0)
        COMBO(rwin, &kp RGUI, 18 28, 30, 6)
	COMBO(Lpara, &kp LS(N8), 4 14, 30, 0)
 	COMBO(Rpara, &kp LC(BSPC), 5 15, 60, 0 1)
	
	};        

    behaviors {
          cit: cit_rp {
            compatible = "zmk,behavior-mod-morph";
            label = "cit rp";
            #binding-cells = <0>;
            bindings = <&hmc LGUI LS(N2)>, <&kp BSLH>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };    
          qe: qe {
            compatible = "zmk,behavior-mod-morph";
            label = "qe";
            #binding-cells = <0>;
            bindings = <&hm LALT LS(MINUS)>, <&kp LS(N1)>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };	
           hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "homerow mods";
            #binding-cells = <2>;
            tapping_term_ms = <250>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
        };
           hmc: homerow_modsc {
            compatible = "zmk,behavior-hold-tap";
            label = "homerow modsc";
            #binding-cells = <2>;
            tapping_term_ms = <250>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };        

        keymap {
                compatible = "zmk,keymap";

                default_layer {
                        label = "Base";
// -------------------------------------------------------------------
// |  Ø  |  O  |  U  |  F  |  ,  |   |  -  |  H  |  L  |  V  |  C  |
// |  I  |  A  |  E  |  S  |  .  |   |  M  |  D  |  N  |  T  |  G  |
// |  Æ  |  Å  |  Y  |  B  |  ?  |   |  '  |  K  |  J  |  P  | shft|
//             | MED | OTH | SPC |   |  R  |  W  | ALT |
                        bindings = <
  &kp LBKT &mt SQT O    &mt SEMI U       &kp F         &lt MED COMMA   &lt FUN BSPC   &kp H         &kp L  &kp V  &kp C
  &kp I    &kp A    &kp E       &hm LSHIFT S  &kp DOT         &kp M          &hm LSHIFT D  &kp N  &kp T  &kp G
  &none    &none    &kp Y       &hmc LCTRL B  &qe             &hmc LGUI BSLH &hmc LCTRL K  &kp J  &kp P  &sk LSHIFT
                  &mo MED &lt OTH SLASH &kp SPC         &lt NAV R      &kp W &kp RALT
                        >;
                };

        nav_layer {
            label = "Nav";
            bindings = <
                &kp SLASH &kp N6 &kp N5 &kp N4         &lt MED LS(BSLH)             &trans &kp BSPC    &kp UARW   &kp DEL  &kp PG_UP
                &kp N3    &kp N2 &kp N1 &hmc LSHIFT N0 &lt FUN LS(N7)               &kp LC(Z)    &kp LARW    &kp DARW   &kp RARW &kp PG_DN
                &kp MINUS &kp N9 &kp N8 &hmc LCTRL N7  &kp LS(N0)                   &none        &none       &none      &kp HOME &kp END
                                  &trans &trans  &trans                   &trans       &trans  &trans
            >;
        };

        other_layer {
            label = "Other";
            bindings = <
                &kp ESC	      &kp LC(R) &hm LALT TAB  &hm LCTRL TAB   &kp RA(N4)          &kp RA(M)           &kp RA(N8) &kp RA(N9) &kp LS(N5)      &kp LS(N3)            
                &kp LS(LG(S)) &kp LC(A) &trans        &kp LC(F) &lt FUN RA(N5)      &kp RA(NON_US_BSLH) &kp LS(N8) &kp LS(N9) &kp NON_US_BSLH &kp LS(NON_US_BSLH)   
                &kp LC(Z)     &kp LC(X) &kp LC(C)     &kp LC(V) &kp RA(N3)          &kp RA(EQUAL)       &kp RA(N7) &kp RA(N0) &kp GRAVE       &kp LS(GRAVE)    
                                               &trans       &trans          &trans        &trans           &trans &trans
            >;
        };

        r_layer {
            label = "R";
            bindings = <
                &trans &trans   &trans     &trans     &trans         &kp LC(Z)       &trans          &trans  &trans  &trans
                &trans   &trans   &trans    &trans &trans            &trans &trans   &trans     &trans        &trans
                &trans    &trans &trans  &trans  &trans               &trans &trans       &trans        &trans &kp CAPS
                                        &trans   &trans        &trans          &trans     &trans &trans
            >;
        };

        sym_layer {
            label = "Sym";
            bindings = <
                &kp RA(N7)     &kp RA(N0)  &kp LS(N5)  &kp LS(N3) &kp RA(M)                     &kp RA(N4)   &kp KP_N4   &kp KP_N5    &kp KP_N6  &trans
                &kp RA(N8)    &kp RA(N9)  &kp LS(N8)  &kp LS(N9) &kp RA(NON_US_BSLH)           &kp RA(N5)   &kp KP_N0   &kp KP_N1    &kp KP_N2  &kp KP_N3
                &kp NON_US_BSLH    &kp LS(NON_US_BSLH)  &kp LS(GRAVE)  &kp GRAVE &kp RA(EQUAL)   &kp RA(N3)   &kp KP_N7   &kp KP_N8    &kp KP_N9  &trans
                                           &trans        &kp DOT &trans         &trans &kp LALT &trans
            >;
        };

        media_layer {
            label = "Media";
            bindings = <
                &trans	      &kp C_PREV    &kp C_VOL_UP &kp C_PP        &none             &kp PSCRN          &kp F5  &kp F6   &kp F7   &kp F8
                &trans        &kp C_NEXT    &kp C_VOL_DN &kp LA(TAB)     &bt BT_CLR        &kp SLCK           &kp F1  &kp F2   &kp F3   &kp F4
                &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2 &bt BT_SEL 3    &bt BT_SEL 4      &kp PAUSE_BREAK    &kp F9  &kp F10  &kp F11  &kp F12
                                              &trans    &kp LA(TAB)     &kp LC(TAB)  &trans       &trans &trans
            >;
        };

        fun_layer {
            label = "OneShot";
            bindings = <
                &kp RA(RBKT)  &kp LS(RBKT)   &kp RBKT      &trans     &trans        &trans          &trans     &kp ENTER     &kp TAB     &kp LS(N1)
                &kp LS(EQUAL) &kp EQUAL &trans     &trans    &kp LS(N8)        &trans          &kp LS(N2) &kp COMMA     &kp DOT     &kp LS(MINUS)
                &none         &kp LC(TAB)       &kp LA(TAB)         &trans     &trans        &trans          &trans     &kp LS(COMMA) &kp LS(DOT) &trans
                                                &trans   &trans      &trans                &trans          &trans &trans
            >;
        };
    };
};
